{"ast":null,"code":"var _jsxFileName = \"/Users/opeyemiagbeja/Desktop/Stutern/react/routing-project/frontend/src/pages/NewEventPage.js\";\nimport { json, redirect } from 'react-router-dom';\nimport EventForm from '../components/EventForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction NewEventPage() {\n  return /*#__PURE__*/_jsxDEV(EventForm, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 10\n  }, this);\n}\n_c = NewEventPage;\nexport default NewEventPage;\nexport async function action(_ref) {\n  let {\n    request,\n    params\n  } = _ref;\n  const data = await request.formData();\n  const eventData = {\n    title: data.get('title'),\n    image: data.get('image'),\n    date: data.get('date'),\n    description: data.get('description')\n  };\n  const response = await fetch('http://localhost:8080/events', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(eventData)\n  });\n  if (response.status === 422) {\n    return response;\n  }\n  if (!response.ok) {\n    throw json({\n      message: 'Could not save event.'\n    }, {\n      status: 500\n    });\n  }\n  return redirect('/events');\n}\nvar _c;\n$RefreshReg$(_c, \"NewEventPage\");","map":{"version":3,"names":["json","redirect","EventForm","NewEventPage","action","request","params","data","formData","eventData","title","get","image","date","description","response","fetch","method","headers","body","JSON","stringify","status","ok","message"],"sources":["/Users/opeyemiagbeja/Desktop/Stutern/react/routing-project/frontend/src/pages/NewEventPage.js"],"sourcesContent":["import { json, redirect } from 'react-router-dom';\n\nimport EventForm from '../components/EventForm';\n\nfunction NewEventPage() {\n  return <EventForm />;\n}\n\nexport default NewEventPage;\n\nexport async function action({ request, params }) {\n  const data = await request.formData();\n\n  const eventData = {\n    title: data.get('title'),\n    image: data.get('image'),\n    date: data.get('date'),\n    description: data.get('description'),\n  };\n\n  const response = await fetch('http://localhost:8080/events', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify(eventData),\n  });\n  if (response.status === 422){\n      return response;\n  }\n  if (!response.ok) {\n    throw json({ message: 'Could not save event.' }, { status: 500 });\n  }\n\n  return redirect('/events');\n}"],"mappings":";AAAA,SAASA,IAAI,EAAEC,QAAQ,QAAQ,kBAAkB;AAEjD,OAAOC,SAAS,MAAM,yBAAyB;AAAC;AAEhD,SAASC,YAAY,GAAG;EACtB,oBAAO,QAAC,SAAS;IAAA;IAAA;IAAA;EAAA,QAAG;AACtB;AAAC,KAFQA,YAAY;AAIrB,eAAeA,YAAY;AAE3B,OAAO,eAAeC,MAAM,OAAsB;EAAA,IAArB;IAAEC,OAAO;IAAEC;EAAO,CAAC;EAC9C,MAAMC,IAAI,GAAG,MAAMF,OAAO,CAACG,QAAQ,EAAE;EAErC,MAAMC,SAAS,GAAG;IAChBC,KAAK,EAAEH,IAAI,CAACI,GAAG,CAAC,OAAO,CAAC;IACxBC,KAAK,EAAEL,IAAI,CAACI,GAAG,CAAC,OAAO,CAAC;IACxBE,IAAI,EAAEN,IAAI,CAACI,GAAG,CAAC,MAAM,CAAC;IACtBG,WAAW,EAAEP,IAAI,CAACI,GAAG,CAAC,aAAa;EACrC,CAAC;EAED,MAAMI,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAA8B,EAAE;IAC3DC,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACP,cAAc,EAAE;IAClB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACZ,SAAS;EAChC,CAAC,CAAC;EACF,IAAIM,QAAQ,CAACO,MAAM,KAAK,GAAG,EAAC;IACxB,OAAOP,QAAQ;EACnB;EACA,IAAI,CAACA,QAAQ,CAACQ,EAAE,EAAE;IAChB,MAAMvB,IAAI,CAAC;MAAEwB,OAAO,EAAE;IAAwB,CAAC,EAAE;MAAEF,MAAM,EAAE;IAAI,CAAC,CAAC;EACnE;EAEA,OAAOrB,QAAQ,CAAC,SAAS,CAAC;AAC5B;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}