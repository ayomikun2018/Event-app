{"ast":null,"code":"var _jsxFileName = \"/Users/opeyemiagbeja/Desktop/Stutern/react/routing-project/frontend/src/App.js\";\n// Challenge / Exercise\n\n// 1. Add five new (dummy) page components (content can be simple <h1> elements)\n//    - HomePage\n//    - EventsPage\n//    - EventDetailPage\n//    - NewEventPage\n//    - EditEventPage\n// 2. Add routing & route definitions for these five pages\n//    - / => HomePage\n//    - /events => EventsPage\n//    - /events/<some-id> => EventDetailPage\n//    - /events/new => NewEventPage\n//    - /events/<some-id>/edit => EditEventPage\n// 3. Add a root layout that adds the <MainNavigation> component above all page components\n// 4. Add properly working links to the MainNavigation\n// 5. Ensure that the links in MainNavigation receive an \"active\" class when active\n// 6. Output a list of dummy events to the EventsPage\n//    Every list item should include a link to the respective EventDetailPage\n// 7. Output the ID of the selected event on the EventDetailPage\n// BONUS: Add another (nested) layout route that adds the <EventNavigation> component above all /events... page components\nimport { createBrowserRouter, RouterProvider } from 'react-router-dom';\nimport Root from './pages/Root';\nimport HomePage from './pages/HomePage';\nimport EventsPage from './pages/EventsPage';\nimport EventDetailPage from './pages/EventDetailPage';\nimport NewEventPage from './pages/NewEventPage';\nimport EditEventPage from './pages/EditEventPage';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst router = createBrowserRouter([{\n  path: '/',\n  element: /*#__PURE__*/_jsxDEV(Root, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 14\n  }, this),\n  children: [{\n    path: '/',\n    element: /*#__PURE__*/_jsxDEV(HomePage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 27\n    }, this)\n  }, {\n    path: '/events',\n    element: /*#__PURE__*/_jsxDEV(EventsPage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 33\n    }, this)\n  }, {\n    path: '/events/:eventId',\n    element: /*#__PURE__*/_jsxDEV(EventDetailPage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 42\n    }, this)\n  }, {\n    path: '/events/new',\n    element: /*#__PURE__*/_jsxDEV(NewEventPage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 37\n    }, this)\n  }, {\n    path: '/events/:eventId/edit',\n    element: /*#__PURE__*/_jsxDEV(EditEventPage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 47\n    }, this)\n  }]\n}]);\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(RouterProvider, {\n    router: router\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 3\n  }, this);\n}\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["createBrowserRouter","RouterProvider","Root","HomePage","EventsPage","EventDetailPage","NewEventPage","EditEventPage","router","path","element","children","App"],"sources":["/Users/opeyemiagbeja/Desktop/Stutern/react/routing-project/frontend/src/App.js"],"sourcesContent":["// Challenge / Exercise\n\n// 1. Add five new (dummy) page components (content can be simple <h1> elements)\n//    - HomePage\n//    - EventsPage\n//    - EventDetailPage\n//    - NewEventPage\n//    - EditEventPage\n// 2. Add routing & route definitions for these five pages\n//    - / => HomePage\n//    - /events => EventsPage\n//    - /events/<some-id> => EventDetailPage\n//    - /events/new => NewEventPage\n//    - /events/<some-id>/edit => EditEventPage\n// 3. Add a root layout that adds the <MainNavigation> component above all page components\n// 4. Add properly working links to the MainNavigation\n// 5. Ensure that the links in MainNavigation receive an \"active\" class when active\n// 6. Output a list of dummy events to the EventsPage\n//    Every list item should include a link to the respective EventDetailPage\n// 7. Output the ID of the selected event on the EventDetailPage\n// BONUS: Add another (nested) layout route that adds the <EventNavigation> component above all /events... page components\nimport { createBrowserRouter, RouterProvider } from 'react-router-dom';\n\nimport Root from './pages/Root';\nimport HomePage from './pages/HomePage';\nimport EventsPage from './pages/EventsPage';\nimport EventDetailPage from './pages/EventDetailPage';\nimport NewEventPage from './pages/NewEventPage';\nimport EditEventPage from './pages/EditEventPage';\nconst router = createBrowserRouter([\n  {path: '/',\n    element: <Root/>,\n    children:[\n    {path :'/', element : <HomePage/>},\n    {path: '/events', element : <EventsPage/>},\n    {path: '/events/:eventId', element : <EventDetailPage/>},\n    {path: '/events/new', element : <NewEventPage/>},\n    {path: '/events/:eventId/edit', element : <EditEventPage/>},\n\n\n    ],\n  }\n])\nfunction App() {\n  return (\n  <RouterProvider router={router}>\n  \n  </RouterProvider>\n  )\n}\n\nexport default App;\n"],"mappings":";AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,mBAAmB,EAAEC,cAAc,QAAQ,kBAAkB;AAEtE,OAAOC,IAAI,MAAM,cAAc;AAC/B,OAAOC,QAAQ,MAAM,kBAAkB;AACvC,OAAOC,UAAU,MAAM,oBAAoB;AAC3C,OAAOC,eAAe,MAAM,yBAAyB;AACrD,OAAOC,YAAY,MAAM,sBAAsB;AAC/C,OAAOC,aAAa,MAAM,uBAAuB;AAAC;AAClD,MAAMC,MAAM,GAAGR,mBAAmB,CAAC,CACjC;EAACS,IAAI,EAAE,GAAG;EACRC,OAAO,eAAE,QAAC,IAAI;IAAA;IAAA;IAAA;EAAA,QAAE;EAChBC,QAAQ,EAAC,CACT;IAACF,IAAI,EAAE,GAAG;IAAEC,OAAO,eAAG,QAAC,QAAQ;MAAA;MAAA;MAAA;IAAA;EAAE,CAAC,EAClC;IAACD,IAAI,EAAE,SAAS;IAAEC,OAAO,eAAG,QAAC,UAAU;MAAA;MAAA;MAAA;IAAA;EAAE,CAAC,EAC1C;IAACD,IAAI,EAAE,kBAAkB;IAAEC,OAAO,eAAG,QAAC,eAAe;MAAA;MAAA;MAAA;IAAA;EAAE,CAAC,EACxD;IAACD,IAAI,EAAE,aAAa;IAAEC,OAAO,eAAG,QAAC,YAAY;MAAA;MAAA;MAAA;IAAA;EAAE,CAAC,EAChD;IAACD,IAAI,EAAE,uBAAuB;IAAEC,OAAO,eAAG,QAAC,aAAa;MAAA;MAAA;MAAA;IAAA;EAAE,CAAC;AAI7D,CAAC,CACF,CAAC;AACF,SAASE,GAAG,GAAG;EACb,oBACA,QAAC,cAAc;IAAC,MAAM,EAAEJ;EAAO;IAAA;IAAA;IAAA;EAAA,QAEd;AAEnB;AAAC,KANQI,GAAG;AAQZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}