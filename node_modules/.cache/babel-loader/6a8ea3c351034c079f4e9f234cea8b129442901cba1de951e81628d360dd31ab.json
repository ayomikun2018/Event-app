{"ast":null,"code":"var _jsxFileName = \"/Users/opeyemiagbeja/Desktop/Stutern/react/routing-project/frontend/src/components/EventForm.js\",\n  _s = $RefreshSig$();\nimport { Form, useNavigate, useNavigation, useActionData, json, redirect } from 'react-router-dom';\nimport classes from './EventForm.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction EventForm(_ref) {\n  _s();\n  let {\n    method,\n    event\n  } = _ref;\n  const data = useActionData();\n  // results data below from backend\n  const navigate = useNavigate();\n  const navigation = useNavigation();\n  function cancelHandler() {\n    navigate('..');\n  }\n  const isSubmitting = navigation.state === 'submitting...';\n  return /*#__PURE__*/_jsxDEV(Form, {\n    method: method,\n    className: classes.form,\n    children: [data && data.errors && /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: Object.values(data.errors).map(err => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: err\n      }, err, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"title\",\n        children: \"Title\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"title\",\n        type: \"text\",\n        name: \"title\",\n        required: true,\n        defaultValue: event ? event.title : ''\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"image\",\n        children: \"Image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"image\",\n        type: \"url\",\n        name: \"image\",\n        required: true,\n        defaultValue: event ? event.image : ''\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"date\",\n        children: \"Date\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"date\",\n        type: \"date\",\n        name: \"date\",\n        required: true,\n        defaultValue: event ? event.date : ''\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"description\",\n        children: \"Description\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        id: \"description\",\n        name: \"description\",\n        rows: \"5\",\n        required: true,\n        defaultValue: event ? event.description : ''\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.actions,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: cancelHandler,\n        disabled: isSubmitting,\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: isSubmitting,\n        children: isSubmitting ? 'Submitting...' : 'Save'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n}\n_s(EventForm, \"4RpZWvb1/vq18jUIhqcDrPiPElE=\", false, function () {\n  return [useActionData, useNavigate, useNavigation];\n});\n_c = EventForm;\nexport default EventForm;\nexport async function action(_ref2) {\n  let {\n    request,\n    params\n  } = _ref2;\n  method = request.method;\n  const data = await request.formData();\n  const eventData = {\n    title: data.get('title'),\n    image: data.get('image'),\n    date: data.get('date'),\n    description: data.get('description')\n  };\n  let url = 'http://localhost:8080/events';\n  if (method = 'PATCH') {\n    const eventId = params.eventId;\n    url = 'http://localhost:8080/events/' + eventId;\n  }\n  const response = await fetch(url, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(eventData)\n  });\n  if (response.status === 422) {\n    return response;\n  }\n  if (!response.ok) {\n    throw json({\n      message: 'Could not save event.'\n    }, {\n      status: 500\n    });\n  }\n  return redirect('/events');\n}\nvar _c;\n$RefreshReg$(_c, \"EventForm\");","map":{"version":3,"names":["Form","useNavigate","useNavigation","useActionData","json","redirect","classes","EventForm","method","event","data","navigate","navigation","cancelHandler","isSubmitting","state","form","errors","Object","values","map","err","title","image","date","description","actions","action","request","params","formData","eventData","get","url","eventId","response","fetch","headers","body","JSON","stringify","status","ok","message"],"sources":["/Users/opeyemiagbeja/Desktop/Stutern/react/routing-project/frontend/src/components/EventForm.js"],"sourcesContent":["import { Form ,useNavigate ,useNavigation, useActionData ,json, redirect} from 'react-router-dom';\n\nimport classes from './EventForm.module.css';\n\nfunction EventForm({ method, event }) {\n  const data = useActionData()\n  // results data below from backend\n  const navigate= useNavigate()\n  const navigation = useNavigation()\n  function cancelHandler() {\n   navigate('..')\n  }\n  const isSubmitting = navigation.state === 'submitting...'\n  return (\n    <Form  method ={ method} className={classes.form}>\n    {data && data.errors && (\n      <ul>\n        {Object.values(data.errors).map((err) =>(\n          <li key ={err}>{err}</li>\n        ))}\n      </ul>\n    )}\n      <p>\n        <label htmlFor=\"title\">Title</label>\n        <input id=\"title\" type=\"text\" name=\"title\" required defaultValue={event ? event.title : ''} />\n      </p>\n      <p>\n        <label htmlFor=\"image\">Image</label>\n        <input id=\"image\" type=\"url\" name=\"image\" required defaultValue={event ? event.image : ''}/>\n      </p>\n      <p>\n        <label htmlFor=\"date\">Date</label>\n        <input id=\"date\" type=\"date\" name=\"date\" required  defaultValue={event ? event.date : ''}/>\n      </p>\n      <p>\n        <label htmlFor=\"description\">Description</label>\n        <textarea id=\"description\" name=\"description\" rows=\"5\" required  defaultValue={event ? event.description : ''}/>\n      </p>\n      <div className={classes.actions}>\n        <button type=\"button\" onClick={cancelHandler} disabled= {isSubmitting}>\n          Cancel\n        </button>\n        <button disabled= {isSubmitting}>{isSubmitting? 'Submitting...': 'Save'}</button>\n      </div>\n    </Form>\n  );\n}\n\nexport default EventForm;\n\nexport async function action({ request, params }) {\n  method = request.method\n  const data = await request.formData();\n\n  const eventData = {\n    title: data.get('title'),\n    image: data.get('image'),\n    date: data.get('date'),\n    description: data.get('description'),\n  };\n\n  let url ='http://localhost:8080/events'\n\n  if (method = 'PATCH'){\n    const eventId = params.eventId;\n    url ='http://localhost:8080/events/' +eventId;\n  }\n  const response = await fetch(url, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify(eventData),\n  });\n  if (response.status === 422){\n      return response;\n  }\n  if (!response.ok) {\n    throw json({ message: 'Could not save event.' }, { status: 500 });\n  }\n\n  return redirect('/events');\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}